<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://qianfengg.github.io</id>
    <title>梅利奥猪猪の窝</title>
    <updated>2020-03-14T14:19:34.564Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://qianfengg.github.io"/>
    <link rel="self" href="https://qianfengg.github.io/atom.xml"/>
    <subtitle>for my dream</subtitle>
    <logo>https://qianfengg.github.io/images/avatar.png</logo>
    <icon>https://qianfengg.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 梅利奥猪猪の窝</rights>
    <entry>
        <title type="html"><![CDATA[玩耍JS树状结构数据]]></title>
        <id>https://qianfengg.github.io/post/wan-shua-js-shu-zhuang-jie-gou-shu-ju/</id>
        <link href="https://qianfengg.github.io/post/wan-shua-js-shu-zhuang-jie-gou-shu-ju/">
        </link>
        <updated>2020-03-07T08:36:47.000Z</updated>
        <content type="html"><![CDATA[<h2 id="題目">題目</h2>
<h3 id="概述">概述</h3>
<ul>
<li>这边的数据，就拿我们当年的童年，war3举例子</li>
<li>本人之前一直玩的是兽族，四个英雄，各列举了点技能，满级10级，小技能等级上限3级</li>
<li>然后就愉快的做题吧</li>
</ul>
<h3 id="练习">练习</h3>
<ul>
<li>
<p>先来看下数据格式</p>
<pre><code class="language-js">let list = [
    {
        id: 0,
        name: &quot;兽族英雄技能&quot;,
        pid: -1
    },
    {
        id: 1,
        name: &quot;剑圣&quot;,
        pid: 0
    },
    {
        id: 2,
        name: &quot;牛头人酋长&quot;,
        pid: 0
    },
    {
        id: 3,
        name: &quot;先知&quot;,
        pid: 0
    },
    {
        id: 4,
        name: &quot;巫医&quot;,
        pid: 0
    },
    {
        id: 5,
        name: &quot;疾风步&quot;,
        pid: 1
    },
    {
        id: 6,
        name: &quot;分身&quot;,
        pid: 1
    },
    {
        id: 7,
        name: &quot;致命一击&quot;,
        pid: 1
    },
    {
        id: 8,
        name: &quot;剑刃风暴&quot;,
        pid: 1
    },
    {
        id: 9,
        name: &quot;治疗波&quot;,
        pid: 4
    },
    {
        id: 10,
        name: &quot;妖术&quot;,
        pid: 4
    },
    {
        id: 11,
        name: &quot;毒蛇守卫&quot;,
        pid: 4
    },
    {
        id: 12,
        name: &quot;无敌&quot;,
        pid: 4
    },
    {
        id: 13,
        name: &quot;1级疾风步&quot;,
        pid: 5
    },
    {
        id: 14,
        name: &quot;2级疾风步&quot;,
        pid: 5
    },
    {
        id: 15,
        name: &quot;3级疾风步&quot;,
        pid: 5
    }
];    
</code></pre>
</li>
<li>
<p>完成以下题目</p>
<ul>
<li>
<p>根据id获取对应的数据</p>
</li>
<li>
<p>根据id获取它的父亲</p>
</li>
<li>
<p>根据id获取它的孩子节点</p>
</li>
<li>
<p>根据id获取它所有的上级节点(父，爷...)</p>
</li>
<li>
<p>根据id获取它所有的下级节点(孩子，孙子...)</p>
</li>
<li>
<p>根据给定的list生成树状结构，类似下图</p>
<figure data-type="image" tabindex="1"><img src="https://qianfengg.github.io/post-images/1583570676094.jpg" alt="" loading="lazy"></figure>
</li>
</ul>
</li>
</ul>
<h2 id="答案">答案</h2>
<h3 id="获取自身">获取自身</h3>
<pre><code class="language-js">function getSelf(list, id){
    return list.filter(item =&gt; item.id === id)[0];
}  
</code></pre>
<h3 id="获取父亲">获取父亲</h3>
<pre><code class="language-js">function getParent(list, id){
    let self = getSelf(list, id);
    return getSelf(list, self.pid);
}   
</code></pre>
<h3 id="获取孩子">获取孩子</h3>
<pre><code class="language-js">function getChildren(list, id){
    return list.filter(item =&gt; item.pid === id);
}
</code></pre>
<h3 id="获取上级父亲爷爷">获取上级(父亲，爷爷...)</h3>
<pre><code class="language-js">function getAllParent(list, id){
    let parent = getParent(list, id);
    let result = [];
    while(parent){
        result.unshift(parent);
        parent = getParent(list, parent.id);
    }
    return result;
}    
</code></pre>
<h3 id="获取下级孩子孙子">获取下级(孩子，孙子...)</h3>
<pre><code class="language-js">function getAllChildren(list, id){
    let children = getChildren(list, id);
    let result = [].concat(children);
    children.forEach(child =&gt; {
        result = result.concat(getChildren(list, child.id));
    })
    return result;
}
</code></pre>
<h3 id="列表转树状-递归实现">列表转树状 - 递归实现</h3>
<pre><code class="language-js">function list2Tree(list, pid){
    let len = list.length;
    function loop(pid){
        let res = [];
        for(let i = 0; i &lt; len; i++){
            let item = list[i];
            if(item.pid === pid){
                item.children = loop(item.id);
                res.push(item);
            }
        }
        return res;
    }
    return loop(pid);
} 
</code></pre>
]]></content>
    </entry>
</feed>